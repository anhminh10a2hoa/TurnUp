type Itinerary @model
  @auth(rules: [{ allow: owner }]) {
  id: ID!
  user: User! @belongsTo
  title: String!
  owner: String @auth(rules: [{ allow: owner, operations: [read] }])
  events: [UserEvent] @hasMany
}

type User @model
  @auth(rules: [{ allow: owner, ownerField: "userSub", operations: [update, delete, read] }, { allow: public, operations: [create] }] ) {
  id: ID!
  userSub: String @auth(rules: [{ allow: owner, ownerField: "userSub", operations: [read] }, { allow: public, operations: [create] }] ) @index(name: "bySub", queryField: "userBySub")
  givenName: String
  familyName: String
  email: String
  language: String
  interestTags: [String]
  itineraries: [Itinerary] @hasMany
}

type UserEvent @model
  @auth(rules: [{ allow: owner }]) {
  id: ID!
  eventId: String!
  itinerary: Itinerary! @belongsTo
  owner: String @auth(rules: [{ allow: owner, operations: [read] }])
}
